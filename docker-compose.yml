version: '3.6'

services:
  db:
    image: postgres:9.6.9-alpine
    hostname: db
    labels:
      traefik.enable: "false"
    volumes:
      - /tmp/postgresql:/var/lib/postgresql
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '25.000'
          memory: 1024M
    environment:
      POSTGRES_DB: needpc
      POSTGRES_USER: node
      POSTGRES_PASSWORD: nodejs
    networks:
      - db-private
      - app-private
      - internal-monitoring
    ports:
      - "5432:5432"
  
  redis:
    image: redis:4.0-alpine
    hostname: redis
    labels:
      traefik.enable: "false"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '25.000'
          memory: 1024M
    networks:
      - cache-private
      - app-private
      - internal-monitoring

  api:
    image: quay.io/perriea/needpc-api:0.0.2
    hostname: api
    depends_on:
      - db
      - redis
    deploy:
      labels:
        traefik.enable: "true"
        traefik.port: "8080"
        traefik.backend: "api"
        traefik.docker.network: "app-private"
        traefik.frontend.rule: "Host:api.needpc.fr"
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '45.000'
          memory: 512M
    environment:
      - NODE_ENV=production
      - APP_SESSION_SECRET=QtwBZcyVfhVKDHTzxQPUf2Rr
      - APP_REDIS_HOST=redis
    configs:
      - source: config_api
        target: /srv/app/app/config/config.json
    networks:
      - app-private
      - internal-monitoring

  front:
    image: quay.io/perriea/needpc-front:0.0.2
    hostname: front
    depends_on:
      - api
    deploy:
      labels:
        traefik.enable: "true"
        traefik.port: "4200"
        traefik.docker.network: "app-private"
        traefik.frontend.rule: "Host:www.needpc.fr"
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '25.000'
          memory: 512M
    networks:
      - app-private
      - internal-monitoring

  traefik:
    image: traefik:v1.6.4-alpine
    hostname: traefik
    depends_on:
      - api
      - front
    deploy:
      labels:
        traefik.enable: "false"
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 1
        window: 120s
      resources:
        limits:
          cpus: '20.000'
          memory: 512M
      placement:
        constraints:
         - node.role == manager
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    configs:
      - source: config_traefik
        target: /etc/traefik/traefik.toml
    environment:
      - CLOUDFLARE_EMAIL=a.perrier89@gmail.com
      - CLOUDFLARE_API_KEY=81a86a9cd11eed5efac2055dc67a13c293943
    networks:
      - public
      - app-private
      - internal-monitoring
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"

  influxdb:
    image: influxdb:1.5.3-alpine
    hostname: influxdb
    deploy:
      labels:
        traefik.enable: "false"
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 1
        window: 120s
      resources:
        limits:
          cpus: '25.000'
          memory: 512M
    volumes:
      - /tmp/influxdb:/var/lib/influxdb
    configs:
      - source: config_influxdb
        target: /etc/influxdb/influxdb.conf
    networks:
      - internal-monitoring

  grafana:
    image: grafana/grafana:5.1.3
    hostname: grafana
    depends_on:
      - influxdb
    deploy:
      labels:
        traefik.enable: "true"
        traefik.port: "3000"
        traefik.docker.network: "internal-monitoring"
        traefik.frontend.rule: "Host:grafana.needpc.fr"
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '25.000'
          memory: 512M
    volumes:
      - /tmp/grafana:/var/lib/grafana
    environment:
      - GF_SERVER_ROOT_URL=https://grafana.needpc.fr
    configs:
      - source: config_grafana
        target: /etc/grafana/grafana.ini
    networks:
      - app-private
      - internal-monitoring

  telegraf:
    image: telegraf:1.7.0-alpine
    hostname: telegraf
    depends_on:
      - influxdb
    deploy:
      labels:
        traefik.enable: "false"
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 1
        window: 120s
      resources:
        limits:
          cpus: '10.000'
          memory: 256M
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    configs:
      - source: config_telegraf
        target: /etc/telegraf/telegraf.conf
    networks:
      - internal-monitoring
      - db-private

configs:
  config_telegraf:
    file: configs/telegraf.conf
  config_influxdb:
    file: configs/influxdb.conf
  config_traefik:
    file: configs/traefik.toml
  config_api:
    file: configs/config.json
  config_grafana:
    file: configs/grafana.ini

networks:
  public:
    driver: overlay
    external: true
  app-private: {}
  db-private: {}
  cache-private: {}
  internal-monitoring: {}